var app=angular.module("app",["ngMaterial"]);app.service("transactionsService",["$http","$q","$filter","$rootScope",function(t,n,e,a){function r(){var e=n.defer(),a=[];return t({method:"GET",url:"http://localhost:3000/categories"}).then(function(t){a.push(s=t.data)}),t({method:"GET",url:"http://localhost:3000/status"}).then(function(t){a.push(d=t.data)}),t({method:"GET",url:"http://localhost:3000/accounts"}).then(function(t){a.push(u=t.data)}),n.all(a).then(function(){e.resolve()}),e.promise}function i(t){var a=n.defer();return a.resolve(f=e("filterSearchTransaction")(p,t)),a.promise}function o(){var e=n.defer();return t({method:"GET",url:"http://localhost:3000/transactions?_sort=date&_order=DESC"}).then(function(t){p=t.data,c().then(function(){e.resolve(a.$broadcast("transactionsService:updated",!0))})}),e.promise}function c(){var t=n.defer();h=[],v=[];for(var e,a=0,r=0,i=0,o=p.length-1;o>=0;o--){var c=p[o];e=s[c.categoryId]&&"Expense"===s[c.categoryId].parentId?-1:1,c.balance=a+e*c.amount,a=c.balance,0===c.accountId&&(r+=e*c.amount),1!==c.accountId||1!==c.statusId&&3!==c.statusId||(i+=c.amount,h.push(c)),0===c.statusId&&v.push(c)}return l.debit=r,l.credit=i,l.overall=r+i,t.resolve(),t.promise}r().then(function(){return a.$broadcast("transactionsService:init"),o()});var s=[];this.getCategories=function(){return s};var u=[];this.getAccounts=function(){return u};var d=[];this.getStatus=function(){return d};var l={overall:0,debit:0,credit:0};this.getBalances=function(){return l};var f=[];this.searchTransactions=function(t){var e=n.defer();return i(t).then(function(){e.resolve(a.$broadcast("transactionsService:search",!0))}),e.promise},this.getSearchResults=function(){return f};var p=[];this.addTransaction=function(e){var a=n.defer();return t({method:"POST",url:"http://localhost:3000/transactions",data:e}).then(function(t){o().then(function(){a.resolve()})}),a.promise},this.addTransactions=function(e){var a=n.defer(),r=[];return angular.forEach(e,function(n){t({method:"POST",url:"http://localhost:3000/transactions",data:n}).then(function(t){r.push(t.data)})}),n.all(r).then(function(){o().then(function(){a.resolve()})}),a.promise},this.deleteTransaction=function(e){var a=n.defer();return t({method:"DELETE",url:"http://localhost:3000/transactions/"+e.id}).then(function(t){o().then(function(){a.resolve()})}),a.promise},this.editTransaction=function(e){var a=n.defer();return t({method:"PUT",url:"http://localhost:3000/transactions/"+e.id,data:e}).then(function(t){o().then(function(){a.resolve()})}),a.promise};var h=[];this.getCreditTransactions=function(){return h};var v=[];this.getDraftTransactions=function(){return v},this.getTransactions=function(){return p}}]),app.filter("filterSearchTransaction",["$filter",function(t){return function(n,e){var a=[];return angular.forEach(n,function(t){t.date=new Date(t.date);var n=null===e.date.start||t.date>=e.date.start,r=t.date<=e.date.end,i=""===e.accountId||t.accountId===e.accountId,o=""===e.categoryId||t.categoryId===e.categoryId,c=""===e.statusId||t.statusId===e.statusId;n&&r&&i&&o&&c&&a.push(t)}),""!==e.description&&(a=t("filter")(a,e.description)),a}}]),app.directive("transactionsAdd",["transactionsService",function(t){return{restrict:"E",replace:!0,templateUrl:"app/components/add/view.html",controller:function(n,e){n.categories=[],n.status=[],n.accounts=[];var a=new Date;n.transaction={date:a,description:"",accountId:0,categoryId:0,statusId:0,parentId:0,amount:null},n.$on("transactionsService:init",function(){n.categories=t.getCategories(),n.status=t.getStatus(),n.accounts=t.getAccounts()}),this.isValid=function(){return""!==n.transaction.description&&0!==n.transaction.amount},this.updateData=function(){var a=e.defer();return t.addTransaction(n.transaction).then(function(){var t=new Date;n.transaction={date:t,description:"",accountId:0,categoryId:0,statusId:0,parentId:0,amount:null},a.resolve()}),a.promise}},link:function(t,n,e,a){var r=($(n).find(".transaction-form"),$(n).find(".transaction-sync")),i=$(n).find(".transaction-submit");r.hide(),t.add=function(t){t.preventDefault(),a.isValid()&&i.fadeOut().promise().done(function(){r.fadeIn().promise().done(function(){a.updateData().then(function(){r.fadeOut().promise().then(function(){i.fadeIn()})})})})}}}}]),app.directive("dashboard",["transactionsService",function(t){return{restrict:"E",replace:!0,templateUrl:"app/components/dashboard/view.html",controller:function(t){},link:function(t,n,e,a){}}}]),app.directive("transactionsTransactions",function(){return{restrict:"E",replace:!0,templateUrl:"app/components/transactions/view.html",controller:function(t){},link:function(t,n,e,a){}}}),app.directive("transactionsSummary",function(){return{restrict:"E",replace:!0,templateUrl:"app/components/summary/view.html",controller:function(t,n,e,a){t.balance={overall:"",debit:"",credit:""},this.init=function(){var r=a.defer();return n.service("GET","transactions?accountId=0&statusId=1&statusId=2").then(function(a){var i={overall:0,debit:0,credit:0};angular.forEach(a,function(t){i.debit+=t.amount}),n.service("GET","transactions?accountId=1&statusId=1&statusId=3").then(function(n){angular.forEach(n,function(t){i.credit+=t.amount}),i.overall=i.debit-i.credit,i.overall=e("currency")(i.overall,"$"),i.debit=e("currency")(i.debit,"$"),i.credit=e("currency")(i.credit,"$"),t.balance=i,r.resolve()})}),r.promise}},link:function(t,n,e,a){var r=$(n).find("p");r.hide(),a.init().then(function(){r.fadeIn()})}}}),app.directive("dashboardBalances",["transactionsService",function(t){return{restrict:"E",replace:!0,templateUrl:"app/components/dashboard/balances/view.html",controller:function(n,e){n.balance={overall:0,debit:0,credit:0},n.$on("transactionsService:updated",function(){n.balance=t.getBalances()})},link:function(t,n,e,a){}}}]),app.directive("dashboardCharts",["transactionsService",function(t){return{restrict:"E",replace:!0,templateUrl:"app/components/dashboard/charts/view.html",controller:function(t){},link:function(t,n,e,a){}}}]),app.directive("dashboardTransactions",["transactionsService",function(t){return{restrict:"E",replace:!0,templateUrl:"app/components/dashboard/transactions/view.html",controller:function(t){},link:function(t,n,e,a){}}}]),app.directive("transactionsEdit",function(){return{restrict:"A",scope:!0,controller:function(t,n,e){this.isValid=function(t){return t==t},this.updateData=function(t){return e.editTransaction(t)}},link:function(t,n,e,a){var r=$(n).find(".transaction-data"),i=$(n).find(".transaction-edit-trigger"),o=$(n).find(".transaction-edit"),c=$(n).find(".transaction-sync"),s=!1,u=!1;i.hide(),o.hide(),c.hide(),$(n).bind("mouseover",function(){$(n).removeClass("pointer"),u||($(n).addClass("pointer"),i.fadeIn().promise().done(function(){s=!0}))}),$(n).bind("mouseleave",function(){$(n).removeClass("pointer"),u||($(n).addClass("pointer"),i.fadeOut().promise().done(function(){s=!1}))}),$(n).bind("click",function(){s&&(u=!0,s=!1,i.hide().promise().done(function(){r.fadeOut().promise().done(function(){o.fadeIn()})}))}),t.save=function(t,n){n&&n.preventDefault(),a.isValid(t)&&o.fadeOut().promise().done(function(){c.fadeIn().promise().done(function(){a.updateData(t)})})}}}}),app.directive("transactionsDelete",["transactionsService",function(t){return{restrict:"A",scope:!0,controller:function(n,e,a){this.deleteData=function(t,n){var r=a.defer(),i=n.description,o=e.confirm().title("Would you like to delete this transaction?").textContent(i).ariaLabel(n.description).targetEvent(t).ok("Yes").cancel("No");return e.show(o).then(function(){r.resolve("delete")},function(){r.resolve("cancel")}),r.promise},this.updateData=function(n){return t.deleteTransaction(n)}},link:function(t,n,e,a){var r=$(n).find(".transaction-delete-trigger"),i=$(n).find(".transaction-sync"),o=!1;r.hide(),i.hide(),$(n).bind("mouseover",function(){o||r.fadeIn()}),$(n).bind("mouseleave",function(){o||r.fadeOut()}),t["delete"]=function(t,n){o=!0,r.fadeIn().promise().then(function(){a.deleteData(t,n).then(function(t){"delete"===t?r.fadeOut().promise().then(function(){i.fadeIn().promise().then(function(){a.updateData(n).then(function(){o=!1})})}):r.fadeOut().promise().then(function(){o=!1})})})}}}}]),app.directive("transactionsSearch",["transactionsService",function(t){return{restrict:"E",replace:!0,templateUrl:"app/components/transactions/search/view.html",controller:function(n,e,a){n.categories=[],n.status=[],n.accounts=[],n.headers=["Date","Description","Account","Category","Amount","Balance","Status"],n.transactions=[];var r=new Date;n.filterProperties={date:{start:null,end:r},description:"",accountId:"",categoryId:"",statusId:""},n.$on("transactionsService:updated",function(){n.categories=t.getCategories(),n.status=t.getStatus(),n.accounts=t.getAccounts()}),this.searchData=function(){var e=a.defer();return t.searchTransactions(n.filterProperties).then(function(t){n.transactions=t,n.filterProperties={date:{start:null,end:r},description:"",accountId:"",categoryId:"",statusId:""},e.resolve()}),e.promise}},link:function(t,n,e,a){var r=$(n).find(".transaction-sync"),i=$(n).find(".transaction-search-element");r.hide(),t.search=function(t){t&&t.preventDefault(),i.fadeOut().promise().done(function(){r.fadeIn().promise().done(function(){a.searchData().then(function(){r.fadeOut().promise().done(function(){i.fadeIn()})})})})}}}}]),app.directive("transactionsTable",function(){return{restrict:"E",replace:!0,scope:{type:"@",filter:"="},templateUrl:"app/components/transactions/table/view.html",controller:function(t,n){t.categories=[],t.status=[],t.accounts=[],t.headers=["Date","Description","Account","Category","Amount","Balance","Status"],t.transactions=[],t.transformDate=function(t){return new Date(t)},t.$on("transactionsService:init",function(){t.categories=n.getCategories(),t.status=n.getStatus(),t.accounts=n.getAccounts()}),t.$on("transactionsService:updated",function(){"credit"===t.type?t.transactions=n.getCreditTransactions():"draft"===t.type?t.transactions=n.getDraftTransactions():"undefined"==typeof t.type&&(t.transactions=n.getTransactions())}),t.$on("transactionsService:search",function(){t.transactions=n.getSearchResults()})},link:function(t,n,e,a){}}});